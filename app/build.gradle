
buildscript {
    ext {
        // --- Languages / framworks
        lombokVersion              = '1.18.22'
        apacheLangVersion          = '3.12.0'
        hibernateValidatorVersion  = '7.0.2.Final'
        jacksonVersion             = '2.10.1'

        // --- Testing ---
        // --- unit testing
        junitVersion               = '5.8.2'
        hamcrestVersion            = '2.2'
        serenityVersion            = '2.0.83'
        cucumberReportsVersion     = '4.11.2'


        // ===== Quality checks =====
        // --- Coding practies (static analysis) ---
        // --- Coding style
        checkstyleVersion          = '9.0.1'
        // --- Common Coding flaws
        pmdVersion                 = '6.41.0'

        // --- Testing ---
        // Unit testing
        junitVersion               = '5.8.2'
        // --- Code coverage
        pitVersion                 = '1.7.3'

        // --- Documentation ---
        asciiDoctorVersion         = '1.5.6'
    }

    repositories {
        mavenLocal()
    }

    dependencies {
        classpath("net.serenity-bdd:serenity-gradle-plugin:${serenityVersion}")
        classpath 'be.jlr-home.gradle:plantumlPlugin:0.1.+'
     }
}

plugins {
    // --- Artifact
    // Apply the java-library plugin for API and implementation separation.
    id 'application'

    // --- annotation processors
    id "io.freefair.lombok" version "6.3.0"

    // --- Frameworks


    // ===== Quality Assurance =====
    // --- Static Analysis
    // --- PMD
    id 'pmd'
    // --- Style
    id 'checkstyle'
    // --- Coverage
    id 'jacoco'
    // --- Mutation testing
    id 'info.solidsoft.pitest' version '1.7.0'


    // ===== Configuration Management =====
    id "net.nemerosa.versioning" version "2.9.0"
    id "com.gorylenko.gradle-git-properties" version "2.3.2"
    id 'maven-publish'

    // ===== Documentation =====
    id 'org.asciidoctor.convert' version '1.5.8'

    id 'project-report'
    id 'build-dashboard'
    // id 'net.serenity-bdd.aggregator' version "${serenityVersion}"

}




repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // This dependency is used by the application.
    implementation 'com.google.guava:guava:30.1.1-jre'
}


application {
    // Define the main class for the application.
    mainClass = 'com.discover.loan.Application'
}


// ===== Testing =====
// --- Unit Testing
testing {
    suites {
        // Configure the built-in test suite
        test {
            // Use JUnit Jupiter test framework
            useJUnitJupiter('5.7.2')
        }
    }
}


// ===== Static Code Analysis =====

// ----- Checkstyle -----
checkstyle {
    showViolations = false
    toolVersion = "${checkstyleVersion}"
    // checkstyle.xml copy from:
    // https://raw.githubusercontent.com/checkstyle/checkstyle/checkstyle-8.6/src/main/resources/google_checks.xml
    // the version should be as same as plugin version
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

checkstyleMain {
    source = 'src/main/java'
}

checkstyleTest {
    source = 'src/test/java'
}


// ----- PMD -----
pmd {
    consoleOutput = false
    ignoreFailures = true       // Don't interrupt the build
    toolVersion = "${pmdVersion}"
    ruleSetFiles = files("${rootDir}/config/pmd/pmd.xml")
    ruleSets = []
}

